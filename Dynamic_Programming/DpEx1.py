# 개미 전사: 문제 설명
# 개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량 창고를 몰래 공격하려고 합니다.
# 메뚜기 마을에는 여러 개의 식량창고가 있는데 식량 창고는 일직선으로 이어져 있습니다.

# 각 식량 창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 식량 창고를 선택적으로 약탈하여 식량을 빼앗을 예정입니다.
# 이때 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있습니다.

# 따라서 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 합니다.

# 정수 N을 입력 받기
N = int(input())
# 모든 식량 정보 입력 받기
array = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
dp = [0] * N

# 다이나믹 프로그래밍 진행(보텀업)
dp[0] = array[0]
dp[1] = max(array[0], array[1])
for i in range(2, N):
    dp[i] += max(dp[i - 1], dp[i - 2] + array[i]) 

# 계산된 결과 출력
print(dp[N - 1])

#문제 해결 아이디어
# N = 4일 때, 다음과 같은 경우들이 존재할 수 있습니다.
#     식량을 선택할 수 있는 경우의 수는  다음과 같이 8가지 입니다.

# (1, 0, 0, 0,), (0, 3, 0, 0), (0, 0, 1, 0), (0, 0, 0, 5)
# (1, 0, 1, 0), (1, 0, 0, 5), (0, 3, 0, 5), (0, 0, 0, 0)

#Ai = i번째 식량창고까지의 최적의 해(얻을 수 있는 식량의 최댓값)
#A0 = 1, A1 = 3, A2 = 3, A3 = 8